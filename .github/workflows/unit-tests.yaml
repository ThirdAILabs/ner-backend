name: Unit Tests

# Kills old jobs from the same pr if we push a new commit
# See https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-22.04

    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_SECRET_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      MODEL_DIR:             ${{ github.workspace }}/models
      HOST_MODEL_DIR:        ${{ github.workspace }}/models
      PYTHON_MODEL_PLUGIN_SCRIPT_PATH:    ${{ github.workspace }}/plugin/plugin-python/plugin.py

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Capture Python executable path
        run: echo "PYTHON_EXECUTABLE_PATH=$(which python)" >> $GITHUB_ENV

      - name: Set up Go â‰¥1.23.3
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.23.3'

      - name: Install Go modules
        run: go mod download

      - name: Download NER models from S3
        run: |
          mkdir -p "$MODEL_DIR"
          aws s3 cp s3://ner-models/cnn_model/         "$MODEL_DIR/cnn_model/"      --recursive
          aws s3 cp s3://ner-models/transformer_model/ "$MODEL_DIR/transformer_model/" --recursive

      - name: Install Python requirements
        run: |
          $PYTHON_EXECUTABLE_PATH -m pip install --upgrade pip
          $PYTHON_EXECUTABLE_PATH -m pip install -r $(dirname "$PYTHON_MODEL_PLUGIN_SCRIPT_PATH")/requirements.txt

      - name: Download spaCy English model
        run: |
          $PYTHON_EXECUTABLE_PATH -m spacy download en_core_web_lg

      - name: Run unit tests
        run: go test -v ./...